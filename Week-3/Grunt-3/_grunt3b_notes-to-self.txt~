Week-3b: Compound.  Important notes to self go here at the top. 

**===== 10/25 morning session; start @ 0510, finish @ 0617 =====**

Started by reviewing cowabunga code in the steps laid out by the Prof. Getting
back to student problem; working on function definition.

Checked my data definition against the Prof's. I used Integer for the student
grade where the Prof. uses Natural[1, 12]. You have to remember this for bounded
lists like these student grades. You also forgot to capitalize the first letter
of your data definition for Student. You also forgot to add a "?" to your
boolean value for allergy, i.e. (student-allergy? s). And for some silly reason,
you cited the template rules used as a compound with *2* fields when it's 3.

When you started the HtDF, you first made the signature Student -> Student when
it's supposed to be Student -> Boolean.

During the function definition and check-expect remember that your function is a
boolean, so it's name needs to be add-student? Then, for the check-expect, you
need to use the make-student compound data definition, like so:

(check-expect (add-student? (make-student "Bob" 5 true)) true)

You were stuck and decided to not spend much time figurung out the actual
structure of the function. There is a need to use "and" to qualify the condition
needed for a student to be marked as being in the correct grade range *and*
having an allergy.

You really should write the program again without looking at anything so that
the structure and tools in it become more fixed in your thinking.

**===== 10/24 morning session; start @ 0625, finish @ 0705 =====**

Off today -- Dad's in town for lunch, hence the later start.

Don't forget to use the HtDD and HtDF template you created when working probs.

Got through data definition. MUST find time later today to complete this problem
and move on to another one.  Didn't make time -- bad dog.

**===== 10/23 morning session; start @ 0515, finish @ 0549 =====**

I have to leave for Randolph by 0645 so I'll have to adjust accordingly.

Have another look at 8:45 and on in the last video (cowabunga). You need to 
start working on some problems and get out of video watching mode.

**===== 10/22 morning session; start @ 0505, finish @ 0627 =====**

You just finished analyzing the traffic light solution from 0505 to 0542. Now
it's on to designing compound data definitions (to represent information that
consists of two or more naturally connected values).

Watching the three videos now. During the second video at 4:23 the Prof. talks
about how the data driven template for compound data definitions is interpreted.
Have a look at the example used in the HtDD page:

(define-struct ball (x y))
;; Ball is (make-ball Number Number)
;; interp. a ball at position x, y 

(define BALL-1 (make-ball 6 10))

#;
(define (fn-for-ball b)
  (... (ball-x b)     ;Number
       (ball-y b)))   ;Number
;; Template rules used:
;;  - compound: 2 fields

You'll only get through watching the first two videos this morning; the last
video is 30 minutes long and the cowabunga! problem will take awhile to really
digest. This topic also have a good number of exercises with it -- it seems
important that you gain a firm understanding of this. Look back and see how much
better you feel about your understanding of data definitions and functions after
making the 3+ week investment in doing the topics all over again, slowly and 
deliberately.

Press on! :-)
<!DOCTYPE html>
<!-- saved from url=(0070)https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule -->
<html lang="en-US"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Wiki - How to Design Data Module | Introduction to Systematic Program Design - Part 1</title>
<link rel="stylesheet" href="https://dt5zaw6a98blc.cloudfront.net/site-static/595ddfeac34ca20b470b491885b1acad3564b90f/css/spark.main.css">
<link rel="stylesheet" href="https://www.coursera.org/maestro/api/course/971286/course.css">
<link rel="icon" href="https://spark-public.s3.amazonaws.com/programdesign/static/images/favicon.ico">
<style type="text/css"> .coursera-reporter-link { display:inline-block;} </style><script type="text/javascript" src="./2-HtDD-Module_files/MathJax.js"></script><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuTitle {background-color: #CCCCCC; margin: -1px -1px 1px -1px; text-align: center; font-style: italic; font-size: 80%; color: #444444; padding: 2px 0; overflow: hidden}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style></head>

<body><div id="MathJax_Message" style="display: none;"></div>
    <a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#course-page-content" class="hidden">Skip Navigation</a>
    <div class="hidden">
        This page features MathJax technology to render mathematical formulae.
        If you are using a screen reader, please visit <a href="http://www.dessci.com/en/products/mathplayer/">MathPlayer</a> to download the plugin for your browser. Please note that this is an Internet Explorer-only plugin at this time.
    </div>

    <h1 class="hidden">Introduction to Systematic Program Design - Part 1</h1>

    <script type="text/javascript" async="" src="./2-HtDD-Module_files/204.min.js"></script><script type="text/javascript" async="" src="./2-HtDD-Module_files/ga.js"></script><script>window.onerror = function(message, url, lineNum) {

  // First check the URL and line number of the error
  url = url || window.location.href;
  // 99% of the time, errors without line numbers arent due to our code,
  // they are due to third party plugins and browser extensions
  if (lineNum === undefined || lineNum == null) return;
  
  // Now figure out the actual error message
  // If it's an event, as triggered in several browsers
  if (message.target && message.type) {
    message = message.type;
  }
  if (!message.indexOf) {
    message = 'Non-string, non-event error: ' + (typeof message);
  }
  
  var errorDescrip = {
    message: message,
    script: url,
    line: lineNum,
    url: document.URL
  }
  
  var err = {
    key: 'page.error.javascript', 
    value: errorDescrip
  }
  
  window._204 = window._204 || [];
  window._204.push(err);
  
  window._gaq = window._gaq || [];
  window._gaq.push(err);
}</script>

<div class="course-topbar container-fluid" role="banner">

    <div class="row-fluid">

        <div class="span3">
          <a href="https://www.coursera.org/" class="course-topbar-logo" data-if-linkable="add-referrer"></a>
        </div>

        <div class="course-topbar-nav-container span9" style="float:right;">
            <h2 class="hidden">Top Navigation Bar</h2>

            <ul class="course-topbar-nav-list">
                <li class="course-topbar-nav-list-item">
                  <a href="https://www.coursera.org/courses" data-if-linkable="add-referrer">Courses</a>
                </li>

                
                <li class="course-topbar-nav-list-item" tabindex="0" role="button" aria-haspopup="true" aria-expanded="false" aria-owns="course-topbar-my" data-popup="#course-topbar-my" data-popup-bind-open="mouseenter" data-popup-close="" style="cursor:pointer;" data-popup-direction="se">
                                        <a data-user-id="1216070">
                        Christopher Edward Beattie                        <i class="icon-caret-down"></i>
                    </a>
                </li>

                            </ul>
        </div>
    </div>

    <div id="course-topbar-aboutus" class="course-topbar-sublist">
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/jobs" target="_new" data-if-linkable="add-referrer">Jobs</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/team" target="_new" data-if-linkable="add-referrer">Team</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/contact" target="_new" data-if-linkable="add-referrer">Contact Us</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/" target="_new" data-if-linkable="add-referrer">About Us</a>
    </div>

    <div id="course-topbar-my" class="course-topbar-sublist">
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/" target="_new">My Courses</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/profile" target="_new">Profile</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/records" target="_new">Course Records</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/settings" target="_new">Settings</a>
                <a class="course-topbar-sublist-item" href="https://class.coursera.org/programdesign-002/class/preferences">Course Preferences</a>
        <a class="course-topbar-sublist-item" href="https://class.coursera.org/programdesign-002/auth/logout">Sign Out</a>
    </div>

</div>








<div class="course-topbanner-wrapper">
  <div class="course-topbanner">
    <div class="course-topbanner-university-logo">
      <a href="https://www.coursera.org/ubc" class="coursera-university-color" target="_blank" data-if-linkable="add-referrer" title="https://www.coursera.org/ubc">
        <img src="./2-HtDD-Module_files/university_logo" alt="ubc">
      </a>
    </div>

    
    <h1 class="course-topbanner-header">
      <a class="course-topbanner-name coursera-university-color" href="https://class.coursera.org/programdesign-002/class/index" data-if-linkable="modal-lock">
        Introduction to Systematic Program Design - Part 1      </a>
      <br>
      <span class="course-topbanner-instructor" style="">
        by  Gregor  Kiczales      </span>
    </h1>

  </div>
</div>

        <div class="container-fluid" style="position:relative;">
        <div class="row-fluid">
            <div id="course-page-sidebar" role="navigation">
                <div class="course-navbar-container">
	<a href="https://class.coursera.org/programdesign-002/class/index">
	<img src="./2-HtDD-Module_files/logo" style="width: 205px;height: 116px;margin: -15px 0px 8px 1px; box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.05);" alt="Course Home Page">
	</a>


<h2 class="hidden">Side Navigation Bar</h2>
<ul class="course-navbar-list">
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/class/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Announcements							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Course Information							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=ToDoWellinThisCourse" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				To Do Well in This Course							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/forum/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Discussion Forums							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/quiz/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Quizzes							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/human_grading/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Peer Graded Problems							</a>
						</li>
	
		
	<li class="course-navbar-item">
					<h3>Reference</h3>
			</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=DesignRecipes" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Design Recipes							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=Syllabus" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Syllabus							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=Language" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Language							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=StyleRules" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Style Rules							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=Glossary" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Glossary							</a>
						</li>
	
		
	<li class="course-navbar-item">
					<h3>Modules</h3>
			</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=BSLModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				1a Beginning Student Language							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDFModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				1b How to Design Functions							</a>
						</li>
	
		
	<li class="course-navbar-item active">
								<a href="./2-HtDD-Module_files/2-HtDD-Module.htm" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				2 How to Design Data							<span class="course-navbar-selected-marker">(selected)</span></a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDWModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				3a How to Design Worlds							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=CompoundModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				3b Compound							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=SelfRefModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				4a Self Reference							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=RefModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				4b Reference 							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=NatModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				5a Naturals							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=HelpersModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				5b Helpers							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=BSTsModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				6a Binary Search Trees							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=MutualRefModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				6b Mutual Reference							</a>
						</li>
	
		
	<li class="course-navbar-item">
					<h3>Additional Resources</h3>
			</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=AllProblems" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				All Problems							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=AllLectures" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				All Lectures							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/lecture/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				All Lectures (Classic)							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="http://www.ccs.neu.edu/home/matthias/HtDP2e/" target="_blank" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				HtDP/2e Book				<span class="icon-share"></span>			</a>
						</li>
	
	
		<li class="course-navbar-item">
		<a href="https://share.coursera.org/wiki/index.php/programdesign:Main" target="_blank" class="coursera-university-color" title="Open course wiki in new window">
			Course Wiki
			<span class="icon-share"></span>
		</a>
	</li>
		
		<li class="course-navbar-item">
		<a href="http://www.meetup.com/Coursera/" target="_blank" class="coursera-university-color">
			Join a Meetup
			<span class="icon-share"></span>
		</a>
	</li>
	
    </ul>

<ul style="list-style-type:none;margin-left: 10px;">
  <li><a href="http://help.coursera.org/" class="coursera-university-color" target="_blank" title="Open help articles in new window"><i class="icon-question-sign"></i> Help Articles</a></li>
</ul>

<ul style="list-style-type:none;margin-left: 10px;">
		<li><a href="https://class.coursera.org/programdesign-002/forum/list?forum_id=10000" class="coursera-university-color"><i class="icon-comments"></i> Course Materials Errors</a></li>
	<li><a href="https://class.coursera.org/programdesign-002/forum/list?forum_id=10001" class="coursera-university-color"><i class="icon-comments"></i> Technical Issues</a></li>

</ul>

</div>
            </div>
            <div id="course-page-content" role="main">
                                

<h2 class="course-page-header">
    How to Design Data Module    <a class="coursera-reporter-link" title="Click here if you&#39;re experiencing technical problems or found errors in the course materials." target="_blank" href="https://class.coursera.org/programdesign-002/help/pages?url=https%3A%2F%2Fclass.coursera.org%2Fprogramdesign-002%2Fwiki%2Fview%3Fpage%3DHtDDModule">
      Help
    </a>
    <a data-coursera-admin-helpwidget-link="" rel="help" href="https://class.coursera.org/mooc/help/pages/setup" title="Course Page Setup" style="display:none;">Learn more.</a>
</h2>

<div id="internal_html_page_content">

<script src="./2-HtDD-Module_files/tablesort.js" type="text/javascript"></script><script src="./2-HtDD-Module_files/displayTable2.js" type="text/javascript"></script><script src="./2-HtDD-Module_files/problemObjects2.js" type="text/javascript"></script><script src="./2-HtDD-Module_files/lectureObjects2.js" type="text/javascript"></script><p>In this module we begin learning how to design data representations of problem domain information. While systems tend to have more function designs than data designs, the design of the data turns out to drive the design of the functions. So data design
    is a critical part of program design.</p>
<p>The material in this module should take <strong>approximately 9-12 &nbsp; hours</strong> of dedicated time to complete, including working along with the lecture videos, doing the practice problems, doing the homework problems and the short quiz.</p>

<h3>Learning Goals</h3>

<ul>
<li>Be able to use the How to Design Data Definitions (HtDD) recipe to design data definitions for atomic data.</li>
    <li>Be able to identify problem domain information that should be represented as simple atomic data, intervals, enumerations, itemizations and mixed data itemizations.</li>
    <li>Be able to use the Data Driven Templates recipe to generate the template for atomic data.</li>
    <li>Be able to use the How to Design Functions (HtDF) recipe to design functions operating on atomic data.</li>
</ul>
<h3>Lecture Videos, Notes and Starter Files</h3>

<div id="lectures"><table border="1" width="90%" style="border: 1px solid rgb(0, 0, 0); padding: 5px; text-align: left; vertical-align: top; max-width: 90%;" id="fd-table-1"><thead><tr><th class="sortable fd-column-0" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Topic
”">Topic
</a><span></span></th><th class="sortable fd-column-1" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Length 
(mm:ss)
”">Length 
(mm:ss)
</a><span></span></th><th class="sortable fd-column-2" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Starter File
”">Starter File
</a><span></span></th><th class="sortable fd-column-3" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Downloads
”">Downloads
</a><span></span></th></tr></thead><tbody><tr><td><a title="HtDD - cond Expressions" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=53" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=53">HtDD - cond Expressions</a><br><div><p><tt>cond</tt> expressions simplify writing conditional                                       expressions with more than 2 cases. A detailed look at the                                       evaluation of <tt>cond</tt> expressions provides insight                                       into the nature of the evaluation rules used by BSL.</p></div></td><td align="center"><div>11:12</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/cond-starter.rkt" title="cond-starter.rkt"><div>cond-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-cond.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=53" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-cond-exprs.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=53_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=53_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - Data Definitions" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=57" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=57">HtDD - Data Definitions</a><br><div><p>Data definitions explain how information is represented                                    as data. This is a crucial part of program design and has a significant                                    effect on the design of every function that operates on that data. </p></div></td><td align="center"><div>8:00</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/next-color-starter.rkt" title="next-color-starter.rkt"><div>next-color-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-intro.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=57" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=57_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=57_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - Atomic Non-Distinct" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=59" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=59">HtDD - Atomic Non-Distinct</a><br><div><p>A first example of using the How to Design Data                                      (<a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDData">HtDD recipe</a>) and                                       <a href="https://class.coursera.org/programdesign-002/wiki/view?page=DataDrivenTemplates">Data Driven Templates</a> recipes.</p></div></td><td align="center"><div>8:05</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/city-name-starter.rkt" title="city-name-starter.rkt"><div>city-name-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-first-data-defs.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=59" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-atomic.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=59_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=59_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - HtDF With Non-Primitive Data" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=61" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=61">HtDD - HtDF With Non-Primitive Data</a><br><div><p>How to use the HtDF recipe with non-primitive data (data defined by a data definition).</p></div></td><td align="center"><div>7:50</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/best-starter.rkt" title="best-starter.rkt"><div>best-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-htdf-dd.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=61" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-atomic-htdf.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=61_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=61_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - HtDF X Structure of Data Orthogonality" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=63" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=63">HtDD - HtDF X Structure of Data Orthogonality</a><br><div><p>The HtDF and HtDD recipes are largely orthogonal. This means that HtDF works nearly the same                                       way for all forms of data. This has a significant impact on how quickly we can expand our                                       design abilities since once we learn a new form of data we already mostly know how to design                                       functions that operate on it.</p></div></td><td align="center"><div>5:32</div></td><td align="center"><div><i>none</i></div></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=63" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=63_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=63_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - Interval" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=65" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=65">HtDD - Interval</a><br><div><p>Interval data definitions are used for information that is numbers within a certain range.</p></div></td><td align="center"><div>7:14</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/seat-num-starter.rkt" title="seat-num-starter.rkt"><div>seat-num-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-first-data-defs.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=65" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-interv.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=65_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=65_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - Enumeration" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=67" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=67">HtDD - Enumeration</a><br><div><p>Enumeration data definitions are used when the information to be represented consists of two                                       or more distinct values.</p></div></td><td align="center"><div>9:40</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/letter-grade-starter.rkt" title="letter-grade-starter.rkt"><div>letter-grade-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-first-data-defs.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=67" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-enum.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=67_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=67_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - Itemization" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=69" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=69">HtDD - Itemization</a><br><div><p>Itemizations are used for information comprised of 2 or more categories, at least one of                                       which is not a distinct value.</p></div></td><td align="center"><div>11:40</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/countdown-starter.rkt" title="countdown-starter.rkt"><div>countdown-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-first-data-defs.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=69" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-itemz.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=69_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=69_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - HtDF with Interval" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=71" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=71">HtDD - HtDF with Interval</a><br><div><p>A quick presentation of designing a function that consumes an interval type.</p></div></td><td align="center"><div>4:57</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/aisle-starter.rkt" title="aisle-starter.rkt"><div>aisle-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-htdf-dd.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=71" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-interv-htdf.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=71_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=71_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - HtDF with Enumeration" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=73" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=73">HtDD - HtDF with Enumeration</a><br><div><p>A quick presentation of designing a function that consumes an enumeration type.</p></div></td><td align="center"><div>6:03</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/bump-up-starter.rkt" title="bump-up-starter.rkt"><div>bump-up-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-htdf-enum.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=73" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-enum-htdf.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=73_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=73_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - HtDF with Itemization" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=75" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=75">HtDD - HtDF with Itemization</a><br><div><p>A quick presentation of designing a function that consumes an itemization type.</p></div></td><td align="center"><div>10:41</div></td><td align="center"><a href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/countdown-to-display-starter.rkt" title="countdown-to-display-starter.rkt"><div>countdown-to-display-starter.rkt</div></a></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/notes/htdd/htdd-htdf-dd.rkt" title="Notes (rkt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Notes (rkt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=75" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://spark-public.s3.amazonaws.com/programdesign/in-video-quizzes/htdd-itemz-htdf.pdf" title="In Video Quizzes (pdf)"><div><i class="icon-file"></i></div><div><div class="hidden">In Video Quizzes (pdf)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=75_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=75_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr><tr><td><a title="HtDD - Structure of Information Flows Through" href="https://class.coursera.org/programdesign-002/lecture/view?lecture_id=77" data-modal=".inpage-video-modal" data-modal-iframe="../lecture/view?lecture_id=77">HtDD - Structure of Information Flows Through</a><br><div><p>A summary of the week, highlighting how identification of the form of information to be represented                                       flows through the rest of the program.</p></div></td><td align="center"><div>3:54</div></td><td align="center"><div><i>none</i></div></td><td align="center"><div class="course-lecture-item-resource"><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/download.mp4?lecture_id=77" title="Video (mp4)"><div><i class="icon-download-alt resource"></i></div><div><div class="hidden">Video (mp4)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=77_en&format=txt" title="Transcript (txt)"><div><i class="icon-align-justify"></i></div><div><div class="hidden">Transcript (txt)</div></div></a><a target="_new" href="https://class.coursera.org/programdesign-002/lecture/subtitles?q=77_en&format=srt" title="Subtitles (srt)"><div><i class="icon-list"></i></div><div><div class="hidden">Subtitles (srt)</div></div></a></div></td></tr></tbody></table></div>
<script>
    displayLectureTable('lectures', 'HtDD');
</script><h3>Lecture Problems</h3>
<div id="lectureProblems"><table border="1" width="90%" style="border: 1px solid rgb(0, 0, 0); padding: 5px; text-align: left; vertical-align: top; max-width: 90%;" id="fd-table-2"><thead><tr><th class="sortable fd-column-0" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Module Kind #
”">Module Kind #
</a><span></span></th><th class="sortable fd-column-1" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Assignment
”">Assignment
</a><span></span></th><th class="sortable fd-column-2" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Duration
”">Duration
</a><span></span></th><th class="sortable-sortImage fd-column-3" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Difficulty
”">Difficulty
</a><span></span></th><th class="sortable fd-column-4" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Code Files
”">Code Files
</a><span></span></th><th class="sortable fd-column-5" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Requires
Lecture
”">Requires
Lecture
</a><span></span></th></tr></thead><tbody><tr><td align="center"><div>HtDD L1</div></td><td>Design a data definition for all the citys in the world.</td><td align="center"><div>8 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="City name" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/city-name-starter.rkt">city-name-starter.rkt</a><br><a title="City name" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/city-name-solution.rkt">city-name-solution.rkt</a></td><td align="center">HtDD - atomic</td></tr><tr><td align="center"><div>HtDD L2</div></td><td>Given the data definition for City, design a function that checks if a given city is the best city in the world.</td><td align="center"><div>8 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Best" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/best-starter.rkt">best-starter.rkt</a><br><a title="Best" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/best-solution.rkt">best-solution.rkt</a></td><td align="center">HtDD - atomic-htdf</td></tr><tr><td align="center"><div>HtDD L3</div></td><td>Design a data definition for seat numbers in a theatre.</td><td align="center"><div>8 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Seat number" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/seat-num-starter.rkt">seat-num-starter.rkt</a><br><a title="Seat number" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/seat-num-solution.rkt">seat-num-solution.rkt</a></td><td align="center">HtDD - interv</td></tr><tr><td align="center"><div>HtDD L4</div></td><td>Design a data definition to represent a student's grade.</td><td align="center"><div>10 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Letter grade" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/letter-grade-starter.rkt">letter-grade-starter.rkt</a><br><a title="Letter grade" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/letter-grade-solution.rkt">letter-grade-solution.rkt</a></td><td align="center">HtDD - enum</td></tr><tr><td align="center"><div>HtDD L5</div></td><td>Design a data definition to represent the current state of a New Year's Eve countdown.</td><td align="center"><div>18 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/2_blue_square.svg" height="18" width="18"></td><td align="left"><a title="Countdown" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/countdown-starter.rkt">countdown-starter.rkt</a><br><a title="Countdown" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/countdown-solution.rkt">countdown-solution.rkt</a></td><td align="center">HtDD - itemz</td></tr><tr><td align="center"><div>HtDD L6</div></td><td>Given the data definition for SeatNum, design a function that determines if the seat number is on the aisle.</td><td align="center"><div>10 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Aisle" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/aisle-starter.rkt">aisle-starter.rkt</a><br><a title="Aisle" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/aisle-solution.rkt">aisle-solution.rkt</a></td><td align="center">HtDD - interv-htdf</td></tr><tr><td align="center"><div>HtDD L7</div></td><td>Given the data definition for LetterGrade, design a function that produces the next highest grade.</td><td align="center"><div>10 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Bump up" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/bump-up-starter.rkt">bump-up-starter.rkt</a><br><a title="Bump up" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/bump-up-solution.rkt">bump-up-solution.rkt</a></td><td align="center">HtDD - enum-htdf</td></tr><tr><td align="center"><div>HtDD L8</div></td><td>Given the data definition for Countdown, design a function that produces an image of the current state.</td><td align="center"><div>15 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/2_blue_square.svg" height="18" width="18"></td><td align="left"><a title="Countdown to display" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/countdown-to-display-starter.rkt">countdown-to-display-starter.rkt</a><br><a title="Countdown to display" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/countdown-to-display-solution.rkt">countdown-to-display-solution.rkt</a></td><td align="center">HtDD - itemz-htdf</td></tr></tbody></table></div>
<script>
    displayProblemTable('lectureProblems', 'HtDD', 'Lecture');
</script><h3>Practice Problems</h3>
<div id="practiceProblems"><table border="1" width="90%" style="border: 1px solid rgb(0, 0, 0); padding: 5px; text-align: left; vertical-align: top; max-width: 90%;" id="fd-table-3"><thead><tr><th class="sortable fd-column-0" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Module Kind #
”">Module Kind #
</a><span></span></th><th class="sortable fd-column-1" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Assignment
”">Assignment
</a><span></span></th><th class="sortable fd-column-2" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Duration
”">Duration
</a><span></span></th><th class="sortable-sortImage fd-column-3" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Difficulty
”">Difficulty
</a><span></span></th><th class="sortable fd-column-4" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Code Files
”">Code Files
</a><span></span></th><th class="sortable fd-column-5" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Requires
Lecture
”">Requires
Lecture
</a><span></span></th></tr></thead><tbody><tr><td align="center"><div>HtDD P1</div></td><td>Design a data definition and a function for a program to track a ski lodge's payroll.</td><td align="center"><div>15 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Employees" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/employees-starter.rkt">employees-starter.rkt</a><br><a title="Employees" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/employees-solution.rkt">employees-solution.rkt</a></td><td align="center">HtDD - interv-htdf</td></tr><tr><td align="center"><div>HtDD P2</div></td><td>Design a data definition and a function for a program to classify buildings in downtown Vancouver.</td><td align="center"><div>20 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/2_blue_square.svg" height="18" width="18"></td><td align="left"><a title="Demolish" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/demolish-starter.rkt">demolish-starter.rkt</a><br><a title="Demolish" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/demolish-solution.rkt">demolish-solution.rkt</a></td><td align="center">HtDD - enum-htdf</td></tr><tr><td align="center"><div>HtDD P3</div></td><td>Design a data definition and a function for a program to track a rocket's return to Earth.</td><td align="center"><div>25 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/3_black_diamond.png" height="23" width="23"></td><td align="left"><a title="Rocket" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/rocket-starter.rkt">rocket-starter.rkt</a><br><a title="Rocket" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/rocket-solution.rkt">rocket-solution.rkt</a></td><td align="center">HtDD - itemz-htdf</td></tr><tr><td align="center"><div>HtDD P4</div></td><td>Fix error(s) in the revised data definition for LetterGrade.</td><td align="center"><div>8 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="LetterGrade Error" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/letter-grade-error-starter.rkt">letter-grade-error-starter.rkt</a><br><a title="LetterGrade Error" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/letter-grade-error-solution.rkt">letter-grade-error-solution.rkt</a></td><td align="center">HtDD - enum</td></tr><tr><td align="center"><div>HtDD P5</div></td><td>Discuss the importance of following style rules and fix a given data definition to follow them.</td><td align="center"><div>8 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Style Rules" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/style-rules-starter.rkt">style-rules-starter.rkt</a><br><a title="Style Rules" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/style-rules-solution.rkt">style-rules-solution.rkt</a></td><td align="center">HtDD - interv</td></tr><tr><td align="center"><div>HtDD P6</div></td><td>Design a data definition and a function to determine whether a bike route is exclusively designated for bicycles.</td><td align="center"><div>20 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/2_blue_square.svg" height="18" width="18"></td><td align="left"><a title="Bike Route" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/bike-route-starter.rkt">bike-route-starter.rkt</a><br><a title="Bike Route" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/bike-route-solution.rkt">bike-route-solution.rkt</a></td><td align="center">HtDD - enum-htdf</td></tr><tr><td align="center"><div>HtDD P7</div></td><td>Design two data definitions and a function to determine the steepness rating of a hill grade.</td><td align="center"><div>35 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/3_black_diamond.png" height="23" width="23"></td><td align="left"><a title="Steepness" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/steepness-starter.rkt">steepness-starter.rkt</a><br><a title="Steepness" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/steepness-solution.rkt">steepness-solution.rkt</a></td><td align="center">HtDD - enum-htdf, interv-htdf</td></tr><tr><td align="center"><div>HtDD P8</div></td><td>Fix the error(s) in a function we have developed for the Rocket program.</td><td align="center"><div>7 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Rocket Error" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/rocket-error-starter.rkt">rocket-error-starter.rkt</a><br><a title="Rocket Error" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/rocket-error-solution.rkt">rocket-error-solution.rkt</a></td><td align="center">HtDD - itemz-htdf</td></tr></tbody></table></div>
<script>
    displayProblemTable('practiceProblems', 'HtDD', 'Practice');
</script><h3>Homework Problems</h3>
<div id="homeworkProblems"><table border="1" width="90%" style="border: 1px solid rgb(0, 0, 0); padding: 5px; text-align: left; vertical-align: top; max-width: 90%;" id="fd-table-4"><thead><tr><th class="sortable fd-column-0" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Module Kind #
”">Module Kind #
</a><span></span></th><th class="sortable fd-column-1" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Assignment
”">Assignment
</a><span></span></th><th class="sortable fd-column-2" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Duration
”">Duration
</a><span></span></th><th class="sortable-sortImage fd-column-3" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Difficulty
”">Difficulty
</a><span></span></th><th class="sortable fd-column-4" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Code Files
”">Code Files
</a><span></span></th><th class="sortable fd-column-5" rowspan="1" colspan="1" align="center"><a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule#" class="fdTableSortTrigger" title="Sort on “Requires
Lecture
”">Requires
Lecture
</a><span></span></th></tr></thead><tbody><tr><td align="center"><div>HtDD H1</div></td><td>Design two data definitions and a function for a program to perfectly heat oatmeal.</td><td align="center"><div>35 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/3_black_diamond.png" height="23" width="23"></td><td align="left"><a title="Breakfast" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/breakfast-starter.rkt">breakfast-starter.rkt</a><br><a title="Breakfast" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/breakfast-solution.rkt">breakfast-solution.rkt</a></td><td align="center">HtDD - itemz</td></tr><tr><td align="center"><div>HtDD H2</div></td><td>Design a function based on a given data definition for compass directions.</td><td align="center"><div>8 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/1_green_circle.svg" height="23" width="23"></td><td align="left"><a title="Direction" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/direction-starter.rkt">direction-starter.rkt</a><br><a title="Direction" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/direction-solution.rkt">direction-solution.rkt</a></td><td align="center">HtDD - enum-htdf</td></tr><tr><td align="center"><div>HtDD H3</div></td><td>Design a data definition to represent airline dinners, and a function to let flight attendants know a passenger's choice.</td><td align="center"><div>18 min.</div></td><td align="center"><img title="Difficulty" src="./2-HtDD-Module_files/2_blue_square.svg" height="18" width="18"></td><td align="left"><a title="Dinner" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/dinner-starter.rkt">dinner-starter.rkt</a><br><a title="Dinner" href="https://spark-public.s3.amazonaws.com/programdesign/starters/htdd/dinner-solution.rkt">dinner-solution.rkt</a></td><td align="center">HtDD - itemz-htdf</td></tr></tbody></table></div>
<script>
    displayProblemTable('homeworkProblems', 'HtDD', 'Homework');
</script><h3>Module Quiz</h3>

<p>Be sure to complete the homework problems before you do the module quiz. The quiz itself can be found on the&nbsp;<a href="https://class.coursera.org/programdesign-002/quiz/index" title="Link: ../quiz/index">All Quizzes</a>&nbsp;page.
    <br></p>

<h3>Tips for Success</h3>

<p>At this point in the course it would be a good idea to review <a href="https://class.coursera.org/programdesign-002/wiki/view?page=ToDoWellinThisCourse" title="Link: view?page=ToDoWellinThisCourse">To Do Well in This
  Course</a> page. But here are some suggestions specific to this module.</p>
<ul>
<li>In this module, we switch gears a little and start working on designing data definitions. Unlike function designs, there is nothing that "actually runs" (is evaluated) in data designs. But don't think that makes data designs less important - one thing
        you will see in this course is that often the data design is the most important part of an overall design. That's because designing the data pre-determines the structure of most functions that operate on that data.</li>
    <li>Remember that data definitions (or data designs) and function designs are different. So, for example, while both have examples, function examples are wrapped in <tt>check-expect</tt> and show how the function is supposed to run. Data examples are defined
        as constants using <tt>define</tt> and show how the data definition represents domain information. Try not to confuse the two.</li>
    <li>The method may still seem like overkill, especially for the first part of the module. But the reason for distinguishing templates from stubs will become clear early in the module, and by the end of the module you should see clearly examples of why
        generating the template first and then coding using examples can make functions much easier to design.</li>
</ul>
<div class="inpage-video-modal" data-modal-overlay-class="inpage-video-overlay" data-modal-position="absolute">
    <div style="position:absolute;top:-25px;right:0px;color:white;cursor:pointer;" data-modal-close="">
        Close
    </div>
</div>

<style type="text/css">
    .inpage-video-modal {                                
       width: 960px;                                     
       height: 610px;  
       display: none;      
    }
      
    .inpage-video-overlay {
       background: black;
       opacity: 0.75;
       filter:alpha(opacity=75);  
    }
</style>
</div>
<hr>
<div>
    <div style="float:left">
    	    	    </div>
    <div style="float:right;text-align:right;font-size:10px;">
    	Created Thu 29 Aug 2013  4:39 PM EDT (UTC -0400)<br>
    	Last Modified Tue 10 Sep 2013 11:36 PM EDT (UTC -0400)    </div>
</div>

            </div>
        </div>
    </div>
        
    
    <script src="./2-HtDD-Module_files/spark.js"></script>

<script>window.onerror = function(message, url, lineNum) {

  // First check the URL and line number of the error
  url = url || window.location.href;
  // 99% of the time, errors without line numbers arent due to our code,
  // they are due to third party plugins and browser extensions
  if (lineNum === undefined || lineNum == null) return;
  
  // Now figure out the actual error message
  // If it's an event, as triggered in several browsers
  if (message.target && message.type) {
    message = message.type;
  }
  if (!message.indexOf) {
    message = 'Non-string, non-event error: ' + (typeof message);
  }
  
  var errorDescrip = {
    message: message,
    script: url,
    line: lineNum,
    url: document.URL
  }
  
  var err = {
    key: 'page.error.javascript', 
    value: errorDescrip
  }
  
  window._204 = window._204 || [];
  window._204.push(err);
  
  window._gaq = window._gaq || [];
  window._gaq.push(err);
}</script>
<script type="text/javascript">
    // SET UP THE MULTITRACKER
        window.logger = window.Log({level:"error"});
        var parts = location.host.split(".");
    while(parts.length > 2) { parts.shift(); }

    window.multitracker = window.MultiTracker({logger:window.logger});
    window.multitracker.register('204', window._204 = window._204 || []);
    window.multitracker.register('ga', window._gaq = window._gaq || [], 'google');

    // SET UP GA and 204
    window._gaq.push(['_setAccount', 'UA-28377374-1']);
    window._gaq.push(['_setDomainName', 'coursera.org']);
    window._gaq.push(['_setAllowLinker', true]);  
    window._gaq.push(['_trackPageview']);
    
    // configure 204 with the following settings
    window._204.push(["client", "spark"]);
    window._204.push(["user", 1216070]);
    window._204.push(["domain", "." + parts.join(".")]);

    // set off the first event
    window._204.push({key:"pageview", val:{}});

    // override our multitracker queues with the ga queue when it is ready
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    
      ga.onload = ga.onreadystatechange = function() {
          ga.onreadystatechange = ga.onload = null;
          window.multitracker.get('ga').queue = window._gaq;
      };
    })();

    // override our multitracker queues with the 204 queue when it is ready
    (function() {
      var a = document.createElement('script'); a.type = 'text/javascript'; a.async = true;
      a.src = 'https://eventing.coursera.org/204.min.js';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(a, s);
      a.onload = a.onreadystatechange = function() {
          a.onreadystatechange = a.onload = null;
          window.multitracker.get('204').queue = window._204;
      };
    })();
</script>

<script>
  // Set up shared AB testing object
  (function() {
    window.ab = {};

    // we want to share the 204 session cookie with the AB session cookie...
    var sessionId = AB.makeSession("__204u", {expires:356, domain:"." + location.host});
        var debug = false;
    
    window.ab.user = window.AB(1216070, "user", {debug:debug, tracker:window.multitracker, logger:window.logger});
    window.ab.session = window.AB(sessionId, "session", {debug:debug, tracker:window.multitracker, logger:window.logger});

    if(window.CourseraABExperiments.user) {
        window.ab.user.addExperiments(window.CourseraABExperiments.user);
        window.ab.user.runExperimentsOn("body");
    }

    if(window.CourseraABExperiments.session) {
        window.ab.session.addExperiments(window.CourseraABExperiments.session);
        window.ab.session.runExperimentsOn("body");
    }
  })();
</script>


    <script>
      // Set up help widget
      (function() {
        $("[data-helpwidget]").each(function() {
            window.HelpWidget(this, {tracker: window.multitracker});
        });
       })();

        $("[data-readme]").each(function() {
            window.ReadMe(this);
        });
    </script>

    <script src="./2-HtDD-Module_files/modal_focus.js" type="text/javascript"></script>
    <script src="./2-HtDD-Module_files/get_query_parameters.js" type="text/javascript"></script>
    <script src="./2-HtDD-Module_files/signature_track.js" type="text/javascript"></script>
    <script src="./2-HtDD-Module_files/item_list.js" type="text/javascript"></script>
    <script src="./2-HtDD-Module_files/navbar.js" type="text/javascript"></script>

    
    <script>
     // Set up help widget
      (function() {
        $("[data-helpwidget]").each(function() {
            window.HelpWidget(this, {tracker: window.multitracker});
        });
       })();
    </script>

        <script>
    (function() {
        $("<style type='text/css'> .coursera-reporter-link { display:inline-block;} </style>").appendTo("head");
    })();
    </script>
    
    <script type="text/x-mathjax-config;executed=true">
MathJax.Hub.Config({
  config: ["MMLorHTML.js"],
  
  styleSheets: [],
  styles: {},

  jax: ["input/TeX"],
  
  extensions: ["tex2jax.js"],

  preJax: null,
  postJax: null,

  preRemoveClass: "MathJax_Preview",

  showProcessingMessages: true,

  messageStyle: "none",
  
  displayAlign: "center",
  displayIndent: "0em",
  
  delayStartupUntil: "none",

  skipStartupTypeset: false,
  
  elements: [],
  
  tex2jax: {
	    inlineMath: [
	                 ['$$','$$'],      // uncomment this for standard TeX math delimiters
	                 ['\\(','\\)']
	                 ],

	                 displayMath: [
	                 ['\\[','\\]']
	                 ],

    skipTags: ["script","noscript","style","textarea","pre","code"],
    ignoreClass: "tex2jax_ignore",
    processClass: "tex2jax_process",
    processEscapes: false,
    processEnvironments: true,
    preview: "TeX"
    
  },
  
  mml2jax: {
    preview: "alttext"
    
  },
  
  jsMath2jax: {
    preview: "TeX"
    
  },

  TeX: {
    TagSide: "right",
    TagIndent: ".8em",
    MultLineWidth: "85%",
    Macros: {},

    extensions: ["AMSmath.js", "AMSsymbols.js"]
    
  },

  //============================================================================
  //
  //  These parameters control the MathML inupt jax.
  //
  MathML: {
    //
    //  This specifies whether to use TeX spacing or MathML spacing when the
    //  HTML-CSS output jax is used.
    //
    useMathMLspacing: false
  },
  
  //============================================================================
  //
  //  These parameters control the HTML-CSS output jax.
  //
  "HTML-CSS": {
    
    scale: 100,
    
    availableFonts: ["STIX","TeX"],
    
    preferredFont: "TeX",
    
    webFont: "TeX",
    
    imageFont: "TeX",
    
    undefinedFamily: "STIXGeneral,'Arial Unicode MS',serif",
      
    showMathMenu: true,

    styles: {},
    
    tooltip: {
      delayPost: 600,          // milliseconds delay before tooltip is posted after mouseover
      delayClear: 600,         // milliseconds delay before tooltip is cleared after mouseout
      offsetX: 10, offsetY: 5  // pixels to offset tooltip from mouse position
    }
  },
  
  //============================================================================
  //
  //  These parameters control the NativeMML output jax.
  //
  NativeMML: {

    scale: 100,

    showMathMenu: true,
    showMathMenuMSIE: true,

    styles: {}
  },
  
  MathMenu: {
    delay: 400,
    
    helpURL: "http://www.mathjax.org/help/user/",

    showRenderer: true,
    showFontMenu: false,
    showContext:  false,

    windowSettings: {
      status: "no", toolbar: "no", locationbar: "no", menubar: "no",
      directories: "no", personalbar: "no", resizable: "yes", scrollbars: "yes",
      width: 100, height: 50
    },
    
    styles: {}
    
  },

  MMLorHTML: {
    prefer: {
      MSIE:    "MML",
      Firefox: "MML",
      Opera:   "HTML",
      other:   "HTML"
    }
  }
});
</script>
<script type="text/javascript">
(function () {

  function loadMathJax() {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://duqnjvq4jwr55.cloudfront.net/2.1/MathJax.js";
    document.getElementsByTagName("head")[0].appendChild(script);
  }

  window.loadOrRefreshMathJax = function(domId) {
    if (window.MathJax) {
      if (domId) {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub, domId]);
      } else {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
      }
    } else {
      loadMathJax();
    }
  }
})();
</script>
    <script type="text/javascript">
        var site_base_url = "https:\/\/www.coursera.org\/";
        var site_static_asset_url = "https:\/\/dt5zaw6a98blc.cloudfront.net\/site-static\/";
        var spark_class_short_name = "programdesign";
        var spark_class_id = 971286;
        var spark_class_url = "\/programdesign-002";
        var spark_signature_url = "https:\/\/class.coursera.org\/programdesign-002\/signature\/";

        var course_strings_name = "Introduction to Systematic Program Design - Part 1";
        var student_full_name = "Christopher Edward Beattie";
    </script>

    
<script type="text/javascript">$(function() { loadOrRefreshMathJax();})</script>
<script src="./2-HtDD-Module_files/textbook_wiki.js"></script>




</body></html>
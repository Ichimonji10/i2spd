<!DOCTYPE html>
<!-- saved from url=(0077)https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation -->
<html lang="en-US"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>Wiki - Course Information | Introduction to Systematic Program Design - Part 1</title>
<link rel="stylesheet" href="https://dt5zaw6a98blc.cloudfront.net/site-static/6d6ea821cedd4867bc6269984b612540112a47b1/css/spark.main.css">
<link rel="stylesheet" href="https://www.coursera.org/maestro/api/course/971286/course.css">
<link rel="icon" href="https://spark-public.s3.amazonaws.com/programdesign/static/images/favicon.ico">
<style type="text/css"> .coursera-reporter-link { display:inline-block;} </style><script type="text/javascript" src="./Course-Info_files/MathJax.js"></script><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuTitle {background-color: #CCCCCC; margin: -1px -1px 1px -1px; text-align: center; font-style: italic; font-size: 80%; color: #444444; padding: 2px 0; overflow: hidden}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style></head>

<body><div id="MathJax_Message" style="display: none;"></div>
    <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#course-page-content" class="hidden">Skip Navigation</a>
    <div class="hidden">
        This page features MathJax technology to render mathematical formulae.
        If you are using a screen reader, please visit <a href="http://www.dessci.com/en/products/mathplayer/">MathPlayer</a> to download the plugin for your browser. Please note that this is an Internet Explorer-only plugin at this time.
    </div>

    <h1 class="hidden">Introduction to Systematic Program Design - Part 1</h1>

    <script type="text/javascript" async="" src="./Course-Info_files/204.min.js"></script><script type="text/javascript" async="" src="./Course-Info_files/ga.js"></script><script>window.onerror = function(message, url, lineNum) {

  // First check the URL and line number of the error
  url = url || window.location.href;
  // 99% of the time, errors without line numbers arent due to our code,
  // they are due to third party plugins and browser extensions
  if (lineNum === undefined || lineNum == null) return;
  
  // Now figure out the actual error message
  // If it's an event, as triggered in several browsers
  if (message.target && message.type) {
    message = message.type;
  }
  if (!message.indexOf) {
    message = 'Non-string, non-event error: ' + (typeof message);
  }
  
  var errorDescrip = {
    message: message,
    script: url,
    line: lineNum,
    url: document.URL
  }
  
  var err = {
    key: 'page.error.javascript', 
    value: errorDescrip
  }
  
  window._204 = window._204 || [];
  window._204.push(err);
  
  window._gaq = window._gaq || [];
  window._gaq.push(err);
}</script>

<div class="course-topbar container-fluid" role="banner">

    <div class="row-fluid">

        <div class="span3">
          <a href="https://www.coursera.org/" class="course-topbar-logo" data-if-linkable="add-referrer"></a>
        </div>

        <div class="course-topbar-nav-container span9" style="float:right;">
            <h2 class="hidden">Top Navigation Bar</h2>

            <ul class="course-topbar-nav-list">
                <li class="course-topbar-nav-list-item">
                  <a href="https://www.coursera.org/courses" data-if-linkable="add-referrer">Courses</a>
                </li>

                
                <li class="course-topbar-nav-list-item" tabindex="0" role="button" aria-haspopup="true" aria-expanded="false" aria-owns="course-topbar-my" data-popup="#course-topbar-my" data-popup-bind-open="mouseenter" data-popup-close="" style="cursor:pointer;" data-popup-direction="se">
                                        <a data-user-id="1216070">
                        Christopher Edward Beattie                        <i class="icon-caret-down"></i>
                    </a>
                </li>

                            </ul>
        </div>
    </div>

    <div id="course-topbar-aboutus" class="course-topbar-sublist">
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/jobs" target="_new" data-if-linkable="add-referrer">Jobs</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/team" target="_new" data-if-linkable="add-referrer">Team</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/contact" target="_new" data-if-linkable="add-referrer">Contact Us</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/about/" target="_new" data-if-linkable="add-referrer">About Us</a>
    </div>

    <div id="course-topbar-my" class="course-topbar-sublist">
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/" target="_new">My Courses</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/profile" target="_new">Profile</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/records" target="_new">Course Records</a>
        <a class="course-topbar-sublist-item" href="https://www.coursera.org/account/settings" target="_new">Settings</a>
                <a class="course-topbar-sublist-item" href="https://class.coursera.org/programdesign-002/class/preferences">Course Preferences</a>
        <a class="course-topbar-sublist-item" href="https://class.coursera.org/programdesign-002/auth/logout">Sign Out</a>
    </div>

</div>








<div class="course-topbanner-wrapper">
  <div class="course-topbanner">
    <div class="course-topbanner-university-logo">
      <a href="https://www.coursera.org/ubc" class="coursera-university-color" target="_blank" data-if-linkable="add-referrer" title="https://www.coursera.org/ubc">
        <img src="./Course-Info_files/university_logo" alt="ubc">
      </a>
    </div>

    
    <h1 class="course-topbanner-header">
      <a class="course-topbanner-name coursera-university-color" href="https://class.coursera.org/programdesign-002/class/index" data-if-linkable="modal-lock">
        Introduction to Systematic Program Design - Part 1      </a>
      <br>
      <span class="course-topbanner-instructor" style="">
        by  Gregor  Kiczales      </span>
    </h1>

  </div>
</div>

        <div class="container-fluid" style="position:relative;">
        <div class="row-fluid">
            <div id="course-page-sidebar" role="navigation">
                <div class="course-navbar-container">
	<a href="https://class.coursera.org/programdesign-002/class/index">
	<img src="./Course-Info_files/logo" style="width: 205px;height: 116px;margin: -15px 0px 8px 1px; box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.05);" alt="Course Home Page">
	</a>


<h2 class="hidden">Side Navigation Bar</h2>
<ul class="course-navbar-list">
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/class/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Announcements							</a>
						</li>
	
		
	<li class="course-navbar-item active">
								<a href="./Course-Info_files/Course-Info.htm" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Course Information							<span class="course-navbar-selected-marker">(selected)</span></a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=ToDoWellinThisCourse" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				To Do Well in This Course							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/forum/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Discussion Forums							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/quiz/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Quizzes							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/human_grading/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Peer Graded Problems							</a>
						</li>
	
		
	<li class="course-navbar-item">
					<h3>Reference</h3>
			</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=DesignRecipes" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Design Recipes							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=Syllabus" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Syllabus							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=Language" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Language							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=StyleRules" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Style Rules							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=Glossary" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				Glossary							</a>
						</li>
	
		
	<li class="course-navbar-item">
					<h3>Modules</h3>
			</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=BSLModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				1a Beginning Student Language							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDFModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				1b How to Design Functions							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDDModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				2 How to Design Data							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=HtDWModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				3a How to Design Worlds							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=CompoundModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				3b Compound							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=SelfRefModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				4a Self Reference							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=RefModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				4b Reference 							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=NatModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				5a Naturals							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=HelpersModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				5b Helpers							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=BSTsModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				6a Binary Search Trees							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=MutualRefModule" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				6b Mutual Reference							</a>
						</li>
	
		
	<li class="course-navbar-item">
					<h3>Additional Resources</h3>
			</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=AllProblems" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				All Problems							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/wiki/view?page=AllLectures" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				All Lectures							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="https://class.coursera.org/programdesign-002/lecture/index" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				All Lectures (Classic)							</a>
						</li>
	
		
	<li class="course-navbar-item">
								<a href="http://www.ccs.neu.edu/home/matthias/HtDP2e/" target="_blank" data-if-linkable="modal-lock,gray,lock-icon" class="coursera-university-color">
				
				HtDP/2e Book				<span class="icon-share"></span>			</a>
						</li>
	
	
		<li class="course-navbar-item">
		<a href="https://share.coursera.org/wiki/index.php/programdesign:Main" target="_blank" class="coursera-university-color" title="Open course wiki in new window">
			Course Wiki
			<span class="icon-share"></span>
		</a>
	</li>
		
		<li class="course-navbar-item">
		<a href="http://www.meetup.com/Coursera/" target="_blank" class="coursera-university-color">
			Join a Meetup
			<span class="icon-share"></span>
		</a>
	</li>
	
    </ul>

<ul style="list-style-type:none;margin-left: 10px;">
  <li><a href="http://help.coursera.org/" class="coursera-university-color" target="_blank" title="Open help articles in new window"><i class="icon-question-sign"></i> Help Articles</a></li>
</ul>

<ul style="list-style-type:none;margin-left: 10px;">
		<li><a href="https://class.coursera.org/programdesign-002/forum/list?forum_id=10000" class="coursera-university-color"><i class="icon-comments"></i> Course Materials Errors</a></li>
	<li><a href="https://class.coursera.org/programdesign-002/forum/list?forum_id=10001" class="coursera-university-color"><i class="icon-comments"></i> Technical Issues</a></li>

</ul>

</div>
            </div>
            <div id="course-page-content" role="main">
                                

<h2 class="course-page-header">
    Course Information    <a class="coursera-reporter-link" title="Click here if you&#39;re experiencing technical problems or found errors in the course materials." target="_blank" href="https://class.coursera.org/programdesign-002/help/pages?url=https%3A%2F%2Fclass.coursera.org%2Fprogramdesign-002%2Fwiki%2Fview%3Fpage%3DCourseInformation">
      Help
    </a>
    <a data-coursera-admin-helpwidget-link="" rel="help" href="https://class.coursera.org/mooc/help/pages/setup" title="Course Page Setup" style="display:none;">Learn more.</a>
</h2>

<div id="internal_html_page_content">

<br><table border="0" cellpadding="20"><tbody><tr>
<td>
                <table border="1" cellpadding="10"><tbody><tr>
<td>
                                <ol>
<li> <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#Content%20Overview" title="Link: #Content Overview">Content Overview</a> 
                                    </li>
                                    <li> <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#Required%20Software" title="Link: #Required Software">Required Software</a> 
                                    </li>
                                    <li> <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#Weekly%20Schedule" title="Link: #Weekly Schedule">Weekly Schedule</a> 
                                    </li>
                                    <li> <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#Grading" title="Link: #Grading">Grading</a> 
                                    </li>
                                    <li> <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#Supplementary%20Textbook" title="Link: #Supplementary Textbook">Supplementary Textbook</a> 
                                    </li>
                                    <li> <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#How%20to%20Have%20Fun" title="Link: #How to Have Fun">How to Have Fun and Do Well in this Course</a> 
                                    </li>
                                    <li> <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#Getting%20Help" title="Link: #Getting Help">Getting Help</a> 
                                    </li>
                                    <li> <a href="https://class.coursera.org/programdesign-002/wiki/view?page=CourseInformation#Instructor%20and%20Teaching%20Assistants" title="Link: #Instructor and Teaching Assistants">Instructor and Teaching Assistants</a> 
                                    </li>
                                </ol>
</td>
                        </tr></tbody></table>
</td>
            <td></td>
            <td>
                <iframe width="560" height="315" src="about:blank" frameborder="0" allowfullscreen=""></iframe>
            </td>
        </tr></tbody></table>
<a name="Content%20Overview"></a>

<h3>Content Overview</h3>

<p></p>
<p>Being able to design simple programs is a new form of literacy. Understanding how programs work&nbsp;will help you understand&nbsp;phones, web sites, banking systems, games, movies, social networks and many other computational systems you interact with.
    Being able to design programs will support&nbsp;your&nbsp;work as a&nbsp;scientist, engineer, artist and many other professions:&nbsp;programming will allow you to organize, store, analyze and visualize information; create animations, music, and online
    communities; control devices in our environment; develop computational models and simulations; and much much more.</p>
<p>The major goal of this course is to introduce students to a systematic method for designing programs—indeed for solving hard design problems in general. Previous students have said:
    <br></p>
<blockquote> <i>Studying computer science inspired me to think about problems differently
    and take a more systematic approach to them.<br><br>
    
    Program design is applicable not only to computer science, but numerous
    areas of life. It is essential in the development of problem solving skills.<br><br>
    
    As I began to learn about programs and how they
    work, I started to appreciate how "simple" programs
    like Microsoft Word, especially after building my own
    simpler version of NotePad.
  </i>

</blockquote>
<p>The course is designed to be interesting, accessible and useful for all —from students wanting to become expert programmers to&nbsp;students with only a passing interest. No prior programming experience is assumed, and very little math and science background
    is required. The course will also prepare you to learn more Computer Science skills and concepts in the future. The course builds on the&nbsp;&nbsp;<a href="http://www.programbydesign.org/" target="_blank" title="Link: http://www.programbydesign.org/">How to Design Programs (aka Program by Design)</a>&nbsp;curriculum
    and we are grateful to that community for their work and support. Particular thanks go to Matthias Felleisen, Kathi Fisler and Shriram Krishnamurthi for ongoing suggestions about our version of their material.</p>
<p>Overall schedules/modules covered per week:</p>
<div data-user-generated="data-user-generated" class="coursera-course-detail" style="box-sizing: border-box; margin: 10px auto 20px; clear: both; color: rgb(95, 95, 95); font-size: 14px; line-height: 21px;">
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 1: <i>Modules: BSL, HTDF.</i> Introduction and the structure of the course. The Beginning Student Language; expressions and evaluation rules; primitive operations on numbers, strings and images. The How to Design Functions (HtDF) Recipe.&nbsp;</p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 2: <i>Modules: HtDD.</i> Representing information as data. The How to Design Data (HtDD) recipe. Atomic forms of data including intervals, enumerations, and itemizations.&nbsp;</p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 3: <i>Modules: HtDW,</i> Compound.&nbsp;The design of simple interactive programs. The big-bang user interface framework. The How to Design Worlds (HtDW) recipe. Representing information where two or more values naturally form a whole using compound
        data.&nbsp;
    </p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 4: <i>Modules: Self-Ref, Ref.&nbsp;</i>Representing arbitrary sized information using lists. Decomposition of information into multiple types.</p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 5: <i>Modules: Naturals, Helpers</i>.&nbsp;Functions operating on natural numbers. A parlor trick. Rules for decomposing functions.</p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 6: <i>Modules: BSTs, Mutual-Ref.</i>&nbsp;List abbreviations. Mutual reference allows more complex arbitrary-sized data. Using binary trees to enable fast lookup of information. Using arbitrary arity trees to represent inherently hierarchical
        information.
    </p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 7: <i>Modules: 2-One-Of, Local.</i>&nbsp;Functions that consume two arguments that have 'one-of' in their types. Using local definitions to improve the structure of programs.</p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 8: <i>Modules: Abstraction.&nbsp;</i>Using abstraction to control reduce repetition and complexity in programs.</p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 9: <i>Modules: Genrec, Search.&nbsp;</i>Generative recursion, fractals and search problems.</p>
    <p style="box-sizing: border-box; margin: 0px 0px 10.5px;">Week 10: Final exam.</p>
</div>
<p>Learning Goals
    <br></p>

<p>The main learning goals for this course are:</p>
<ol>
<li>
<em>Understand a systematic design process</em>&nbsp;
        <br>This is demonstrated by being able to write programs for a reasonably complex task, where the ability to use the "one task - one function" rule can be demonstrated.</li>
    <br><li>
<em>Understand that programs are written both to run on computers and for people to read.</em>&nbsp;
        <br>This is demonstrated by being able to to write code that is readable, well organized, documented, and tested.</li>
    <br><li>
<em>Understand the relation between information and data.</em>&nbsp;
        <br>This is demonstrated by being able to design the data representation for a reasonably complex problem, and to describe the information encoded in the given data.</li>
    <br><li>
<em>Understand that the structure of the data a program operates on determines many elements of the program's structure.</em>&nbsp;
        <br>This is demonstrated by being able to identify correspondences between a data definition and a program that operates on that data. Also by being able to identify how potential changes to a data definition would affect a program.</li>
    <br><li>
<em>Understand that one can replace repetitive code with an abstraction in a systematic way. Understand that this is at the heart of designing libraries.</em>&nbsp;
        <br>This is demonstrated by being able to produce examples of code before and after abstraction: before, where one can see the repeated code, and after, where one can see the abstraction and verify that it provides the solution to the original problem,
        as well as several other similar problems. Students should also be able to design a program that uses existing libraries or existing code to solve a new problem.</li>
    <br><li>
<em>Understand that programs can be described using notations other than code, and that these models can facilitate program design.</em>&nbsp;
        <br>This is demonstrated by being able to identify correspondences between non-code models of a program and the program itself and by being able to use non-code models in program design.</li>
</ol>
<br><hr>
<a name="Required%20Software"></a>

<h3>Required Software</h3>

<p>In part 1 of Systematic Program Design we will be using the Beginning and Intermediate Student Languages provided by DrRacket. The DrRacket download includes the languages as well as an editor and other tools we will use. Using these teaching languages
    in part 1 of the course allows us to spend less time on complexities of the language and more time on systematic design. But these languages form the core of nearly all "real world" languages and so you will easily be able to transfer your learning
    to other languages, either in part 2 of the course or independently.</p>
<p>We have cached downloads for the two most commonly installed versions of DrRacket on the Coursera site, links to those are below. If you need another version just follow the third link to the DrRacket download page:</p>
<ul>
<li>
<a href="https://spark-public.s3.amazonaws.com/programdesign/software/racket-5.3.4-bin-i386-osx-mac.dmg" title="Link: https://spark-public.s3.amazonaws.com/programdesign/software/racket-5.3.4-bin-i386-osx-mac.dmg">Mac OS X - Intel 32 bit (hosted at Coursera).</a>

    </li>
    <li>
<a href="https://spark-public.s3.amazonaws.com/programdesign/software/racket-5.3.4-bin-i386-win32.exe" title="Link: https://spark-public.s3.amazonaws.com/programdesign/software/racket-5.3.4-bin-i386-win32.exe">Windows - x86 32 bit (hosted at Coursera).</a>

    </li>
    <li>
<a href="http://racket-lang.org/download/" title="Link: http://racket-lang.org/download/">Main DrRacket download page</a> 
    </li>
</ul>
<br class="Apple-interchange-newline"><hr>
<a name="Weekly%20Schedule"></a>

<h3>Schedule</h3>

<p>The course consists of a number of modules. Many are 1 week long, but some are shorter. Each week we post enough modules to last a complete week. Weeks officially start on Wednesdays, but we post the modules 2 days early on Monday.&nbsp;</p>
<p></p>
<ul>
<li>Each module consists of a number of&nbsp;videos,&nbsp;ranging in length. Most are 8-12 minutes long. Selected videos that work through the solution to larger problems can be much longer, even up to 30 minutes, but by their nature large parts of these
        videos are review rather than new material.</li>
    <li>Most videos include in-video quiz questions designed to help you assess your comprehension of the material in the video. These are not graded, but we encourage you to do them all.</li>
    <li>Videos are supported by reference material describing the design method; all that material&nbsp;is available from the menu at the left edge of the course website.</li>
    <li>For each module we provide&nbsp;practice problems you can use to help learn the material. Solutions are provided to practice problems, but we strongly encourage you to avoid looking at the solution until you have worked the problem.
    </li>
    <li>Each module has several required homework problems followed by a short quiz based on those problems. You are encouraged to do the homework problems together with another student; but you must do the quiz on your own. However, all other resources (recipe
        pages, help desk, etc.) you can access.&nbsp;Each quiz must be done by the posted deadline for that quiz. &nbsp;You can find that deadline on the All Quizzes page and the Announcements page.</li>
</ul>
<p></p>
<p class="p1">In addition, there will be 3 peer graded projects and a final examination. The projects will involve the design of larger programs, and the peer grading rubric will be weighted heavily towards following the design recipes and the clarity of your program.</p>
<hr>
<a name="Grading"></a>

<h3>Grading and Certificates</h3>
<b>Grading Scheme</b>

<p>The grading scheme is as follows:</p>
<ul>
<li>40% - Quizzes/Homework: There are homework&nbsp;assignments for each module of the course (16 in total). The actual assignments are not handed in or graded. Instead there is a short graded quiz you will do&nbsp;<u>after</u> completing the homework.</li>
    <li>35% - 2 peer graded projects.</li>
    <li>25% - Peer Graded&nbsp;Final Exam</li>
</ul>NOTE: We will not count your lowest module quiz grade. This is intended to help those of you who may find it difficult to get the homework and quiz done in time for one module; if you simply do not do the quiz then your zero grade won't count against
you.&nbsp;
<br><p></p>
<b>Certificates of Accomplishment</b>

<p>The following Certificates of Accomplishment will be awarded to students who have performed well in the course:</p>
<ul>
<li>Students with a course grade above 50%: Certificate of Accomplishment</li>
    <li>Students witha course grade above 80%: Certificate of Accomplishment with Distinction
    </li>
</ul>
<p></p>
<b>Signature Track Option</b>

<p>This course is eligible for Signature Track, which will allow you&nbsp;to get&nbsp;a verified certificate from Coursera and the University of British Columbia.
</p>
<hr>
<a name="Supplementary%20Textbook"></a>
<h3>Supplementary Textbook</h3>

<p>
    <a name="Supplementary%20Textbook"></a>All the material required for this course is available through the video lectures, lecture notes and reference pages on the website.</p>
<p>For further reading, the supplementary textbook for the course is a combination of the 1st and 2nd edition of&nbsp;<em>How to Design Programs</em>, by Felleisen, Findler, Flatt, Krishnamurthi.&nbsp;The first edition of the book is available online at&nbsp;
    <a href="http://htdp.org/" title="Link: http://htdp.org">http://htdp.org</a>. The second edition is available online only at&nbsp;<a href="http://www.ccs.neu.edu/home/matthias/HtDP2e/" title="Link: http://www.ccs.neu.edu/home/matthias/HtDP2e/">http://www.ccs.neu.edu/home/matthias/HtDP2e/</a>.</p>
<hr>
<a name="How%20to%20Have%20Fun"></a>

<h3>How to Have Fun and Do Well in this Course</h3>

<p>The course is not intended to be overly hard. We are using programming languages and&nbsp;tools that are designed to support learning and allow you to focus on the key concepts without having to memorize a ton of details. We intend to present a course
    that is interesting, fun and useful for all students. That said, learning to analyze problems and design programs to solve them takes practice. And the course material builds on itself as the course goes along. So it is <b>essential that you keep up
    with the material</b>. The&nbsp;
    <a href="https://class.coursera.org/programdesign-002/wiki/view?page=ToDoWellinThisCourse" title="Link: https://class.coursera.org/programdesign-002/wiki/view?page=ToDoWellinThisCourse">To Do Well in this Course</a>&nbsp;page gives you more suggestions
    on how to work most effectively in this course.
</p>
<p></p>
<hr>
<a name="Getting%20Help"></a>

<h3>Getting Help</h3>

<p>Due to the very large number of students enrolled in this course, the instructor and TAs are&nbsp;not able to answer emails sent directly to their email accounts. Rather, all questions should be posted to the forums. When posting a question to the course
    forums please keep the following in mind:</p>
<ul>
<li>Don't be reluctant to ask questions: if you are unsure about something chances are many other students are too.</li>
    <li>Do check previously posted questions before asking yours. Your question may have already been asked and answered so you can get the answer even more quickly.</li>
    <li>If you see a question that you know the answer to go ahead and answer. The whole idea of the forums is to support a learning community where students and instructors learn from each other. You can learn a lot by answering questions.
    </li>
</ul>
<p>You are encouraged to help your fellow students by responding to posts made in these forums with solutions and by “voting up” the most important posts.
</p>
<hr>
<a name="Instructor%20and%20Teaching%20Assistants"></a>

<h3>Instructor and Teaching Assistants</h3>

<p></p>
<p>
    <br></p>
<table border="0" cellpadding="15"><tbody><tr>
<td width="155">
                <img src="./Course-Info_files/gregor.jpg" title="Image: https://spark-public.s3.amazonaws.com/programdesign/image_files/gregor.jpg" width="150">
</td>
            <td>
                <p>Gregor Kiczales is a professor in the Computer Science Department at the University of British Columbia. His work is directed at enabling programmers to write programs that, as much as possible, look like their design. He is best known
                    for his work on aspect-oriented programming, and he led the Xerox PARC team that developed aspect-oriented programming and AspectJ. He is a co-author of "The Art of the Metaobject Protocol" and was one of the designers of the Common
                    Lisp Object System (CLOS). He is a Fellow of the ACM and the&nbsp;2012 recipient of the Dahl-Nygaard Senior Prize.</p>
            </td>
        </tr></tbody></table>
<table border="0"><tbody>
<tr>
<td width="50%">
                <h4>Dina Bulfone</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/dina.jpg" title="Image: https://spark-public.s3.amazonaws.com/programdesign/image_files/dina.jpg" width="120">
</td>
                            <td>
                                <p>Dina is an undergraduate student at UBC studying evolutionary biology and computer science. She has been a TA for the UBC version of this course for the past year.</p>
                            </td>
                        </tr></tbody></table>
</td>
            <td>
                <h4>Ennas Abdussalam</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/Ennas.png" title="Image: https://spark-public.s3.amazonaws.com/programdesign/image_files/Ennas.png" width="120">
</td>
                            <td>
                                <p>Ennas is a Computer Science student at UBC, and has been a TA for the UBC version of this course for 2 years.
                                    <br></p>
                            </td>
                        </tr></tbody></table>
</td>
        </tr>
<tr>
<td width="50%">
                <h4>JJ Nunez</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/JJphoto.jpg" title="Image: https://spark-public.s3.amazonaws.com/programdesign/image_files/JJphoto.jpg" width="120">
</td>
                            <td>
                                <p>John-Jose recently graduated from UBC with a double major in mathematics and pharmacology. He was a TA for the UBC version of this course for two years, and has used programming in various fields of research such as electrophysiology
                                    and evolutionary game theory.</p>
                                <br><p></p>
                            </td>
                        </tr></tbody></table>
</td>
            <td>
                <h4>Lynsey Haynes</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/lynsey.jpg" title="https://spark-public.s3.amazonaws.com/programdesign/image_files/lynsey.jpg" width="120">
</td>
                            <td>
                                <p>Lynsey has been a TA for the UBC version of this course for one year. She is currently pursuing a degree in Atmospheric Science and Computer Science at UBC.</p>
                            </td>
                        </tr></tbody></table>
</td>
        </tr>
<tr>
<td width="50%">
                <h4>Michael Sun</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/michael.png" title="Image: https://spark-public.s3.amazonaws.com/programdesign/image_files/michael.png" width="120">
</td>
                            <td>
                                <p>Michael has been a TA for the UBC version of this course for 2 years. He is currently pursuing a second degree in Computer Science at UBC. His first was in Microbiology and Immunology.</p>
                            </td>
                        </tr></tbody></table>
</td>
            <td>
                <h4>Thea Simpson</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/thea.JPG" title="Image: https://spark-public.s3.amazonaws.com/programdesign/image_files/thea.JPG" width="120">
</td>
                            <td>
                                <p>Thea has been a TA for the UBC version of this course for 2 years. She is currently pursuing a degree in Accounting.
                                    <br></p>
                            </td>
                        </tr></tbody></table>
</td>
        </tr>
<tr>
<td width="50%">
                <h4>Thomas Leung</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/ThomasLeung.JPG" title="Image: https://spark-public.s3.amazonaws.com/programdesign/image_files/ThomasLeung.JPG" width="120">
</td>
                            <td>
                                <p>Thomas has been a TA for the UBC version of this course for 2 years. He is majoring in Biochemistry and minoring in Mathematics.</p>
                                <br><p></p>
                            </td>
                        </tr></tbody></table>
</td>
            <td>
                <h4>Victoria Loewen</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/victoria.jpeg" title="Image: https://spark-public.s3.amazonaws.com/programdesign/image_files/victoria.jpeg" width="120">
</td>
                            <td>
                                <p>Victoria is an undergraduate at the University of British Columbia majoring in Cognitive Systems - Computational Intelligence and Design (but sometimes it's easier to just say Computer Science!). She has TA'd the UBC version
                                    of this course for the past year.</p>
                                <p>
                                    <br></p>
                            </td>
                        </tr></tbody></table>
</td>
        </tr>
<tr>
<td width="50%">
                <h4>Caroline Lemieux</h4>

                <table border="0" cellpadding="15"><tbody><tr>
<td width="125">
                                <img src="./Course-Info_files/programdesign-image_files-caro.jpg" title="Image: https://d396qusza40orc.cloudfront.net/programdesign%2Fimage_files%2Fcaro.jpg" width="120">
</td>
                            <td>
                                <p>Caroline is an undergraduate student at UBC&nbsp;studying Mathematics and Computer Science. She has been a TA for the UBC version of the course over the last year.&nbsp;</p>
                                <br><p></p>
                            </td>
                        </tr></tbody></table>
</td>
        </tr>
</tbody></table>
<br><ol></ol>
<br>
</div>
<hr>
<div>
    <div style="float:left">
    	    	    </div>
    <div style="float:right;text-align:right;font-size:10px;">
    	Created Thu  9 May 2013  7:40 PM EDT (UTC -0400)<br>
    	Last Modified Sat  5 Oct 2013  7:03 PM EDT (UTC -0400)    </div>
</div>

            </div>
        </div>
    </div>
        
    
    <script src="./Course-Info_files/spark.js"></script>

<script>window.onerror = function(message, url, lineNum) {

  // First check the URL and line number of the error
  url = url || window.location.href;
  // 99% of the time, errors without line numbers arent due to our code,
  // they are due to third party plugins and browser extensions
  if (lineNum === undefined || lineNum == null) return;
  
  // Now figure out the actual error message
  // If it's an event, as triggered in several browsers
  if (message.target && message.type) {
    message = message.type;
  }
  if (!message.indexOf) {
    message = 'Non-string, non-event error: ' + (typeof message);
  }
  
  var errorDescrip = {
    message: message,
    script: url,
    line: lineNum,
    url: document.URL
  }
  
  var err = {
    key: 'page.error.javascript', 
    value: errorDescrip
  }
  
  window._204 = window._204 || [];
  window._204.push(err);
  
  window._gaq = window._gaq || [];
  window._gaq.push(err);
}</script>
<script type="text/javascript">
    // SET UP THE MULTITRACKER
        window.logger = window.Log({level:"error"});
        var parts = location.host.split(".");
    while(parts.length > 2) { parts.shift(); }

    window.multitracker = window.MultiTracker({logger:window.logger});
    window.multitracker.register('204', window._204 = window._204 || []);
    window.multitracker.register('ga', window._gaq = window._gaq || [], 'google');

    // SET UP GA and 204
    window._gaq.push(['_setAccount', 'UA-28377374-1']);
    window._gaq.push(['_setDomainName', 'coursera.org']);
    window._gaq.push(['_setAllowLinker', true]);  
    window._gaq.push(['_trackPageview']);
    
    // configure 204 with the following settings
    window._204.push(["client", "spark"]);
    window._204.push(["user", 1216070]);
    window._204.push(["domain", "." + parts.join(".")]);

    // set off the first event
    window._204.push({key:"pageview", val:{}});

    // override our multitracker queues with the ga queue when it is ready
    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    
      ga.onload = ga.onreadystatechange = function() {
          ga.onreadystatechange = ga.onload = null;
          window.multitracker.get('ga').queue = window._gaq;
      };
    })();

    // override our multitracker queues with the 204 queue when it is ready
    (function() {
      var a = document.createElement('script'); a.type = 'text/javascript'; a.async = true;
      a.src = 'https://eventing.coursera.org/204.min.js';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(a, s);
      a.onload = a.onreadystatechange = function() {
          a.onreadystatechange = a.onload = null;
          window.multitracker.get('204').queue = window._204;
      };
    })();
</script>

<script>
  // Set up shared AB testing object
  (function() {
    window.ab = {};

    // we want to share the 204 session cookie with the AB session cookie...
    var sessionId = AB.makeSession("__204u", {expires:356, domain:"." + location.host});
        var debug = false;
    
    window.ab.user = window.AB(1216070, "user", {debug:debug, tracker:window.multitracker, logger:window.logger});
    window.ab.session = window.AB(sessionId, "session", {debug:debug, tracker:window.multitracker, logger:window.logger});

    if(window.CourseraABExperiments.user) {
        window.ab.user.addExperiments(window.CourseraABExperiments.user);
        window.ab.user.runExperimentsOn("body");
    }

    if(window.CourseraABExperiments.session) {
        window.ab.session.addExperiments(window.CourseraABExperiments.session);
        window.ab.session.runExperimentsOn("body");
    }
  })();
</script>


    <script>
      // Set up help widget
      (function() {
        $("[data-helpwidget]").each(function() {
            window.HelpWidget(this, {tracker: window.multitracker});
        });
       })();

        $("[data-readme]").each(function() {
            window.ReadMe(this);
        });
    </script>

    <script src="./Course-Info_files/modal_focus.js" type="text/javascript"></script>
    <script src="./Course-Info_files/get_query_parameters.js" type="text/javascript"></script>
    <script src="./Course-Info_files/signature_track.js" type="text/javascript"></script>
    <script src="./Course-Info_files/item_list.js" type="text/javascript"></script>
    <script src="./Course-Info_files/navbar.js" type="text/javascript"></script>

    
    <script>
     // Set up help widget
      (function() {
        $("[data-helpwidget]").each(function() {
            window.HelpWidget(this, {tracker: window.multitracker});
        });
       })();
    </script>

        <script>
    (function() {
        $("<style type='text/css'> .coursera-reporter-link { display:inline-block;} </style>").appendTo("head");
    })();
    </script>
    
    <script type="text/x-mathjax-config;executed=true">
MathJax.Hub.Config({
  config: ["MMLorHTML.js"],
  
  styleSheets: [],
  styles: {},

  jax: ["input/TeX"],
  
  extensions: ["tex2jax.js"],

  preJax: null,
  postJax: null,

  preRemoveClass: "MathJax_Preview",

  showProcessingMessages: true,

  messageStyle: "none",
  
  displayAlign: "center",
  displayIndent: "0em",
  
  delayStartupUntil: "none",

  skipStartupTypeset: false,
  
  elements: [],
  
  tex2jax: {
	    inlineMath: [
	                 ['$$','$$'],      // uncomment this for standard TeX math delimiters
	                 ['\\(','\\)']
	                 ],

	                 displayMath: [
	                 ['\\[','\\]']
	                 ],

    skipTags: ["script","noscript","style","textarea","pre","code"],
    ignoreClass: "tex2jax_ignore",
    processClass: "tex2jax_process",
    processEscapes: false,
    processEnvironments: true,
    preview: "TeX"
    
  },
  
  mml2jax: {
    preview: "alttext"
    
  },
  
  jsMath2jax: {
    preview: "TeX"
    
  },

  TeX: {
    TagSide: "right",
    TagIndent: ".8em",
    MultLineWidth: "85%",
    Macros: {},

    extensions: ["AMSmath.js", "AMSsymbols.js"]
    
  },

  //============================================================================
  //
  //  These parameters control the MathML inupt jax.
  //
  MathML: {
    //
    //  This specifies whether to use TeX spacing or MathML spacing when the
    //  HTML-CSS output jax is used.
    //
    useMathMLspacing: false
  },
  
  //============================================================================
  //
  //  These parameters control the HTML-CSS output jax.
  //
  "HTML-CSS": {
    
    scale: 100,
    
    availableFonts: ["STIX","TeX"],
    
    preferredFont: "TeX",
    
    webFont: "TeX",
    
    imageFont: "TeX",
    
    undefinedFamily: "STIXGeneral,'Arial Unicode MS',serif",
      
    showMathMenu: true,

    styles: {},
    
    tooltip: {
      delayPost: 600,          // milliseconds delay before tooltip is posted after mouseover
      delayClear: 600,         // milliseconds delay before tooltip is cleared after mouseout
      offsetX: 10, offsetY: 5  // pixels to offset tooltip from mouse position
    }
  },
  
  //============================================================================
  //
  //  These parameters control the NativeMML output jax.
  //
  NativeMML: {

    scale: 100,

    showMathMenu: true,
    showMathMenuMSIE: true,

    styles: {}
  },
  
  MathMenu: {
    delay: 400,
    
    helpURL: "http://www.mathjax.org/help/user/",

    showRenderer: true,
    showFontMenu: false,
    showContext:  false,

    windowSettings: {
      status: "no", toolbar: "no", locationbar: "no", menubar: "no",
      directories: "no", personalbar: "no", resizable: "yes", scrollbars: "yes",
      width: 100, height: 50
    },
    
    styles: {}
    
  },

  MMLorHTML: {
    prefer: {
      MSIE:    "MML",
      Firefox: "MML",
      Opera:   "HTML",
      other:   "HTML"
    }
  }
});
</script>
<script type="text/javascript">
(function () {

  function loadMathJax() {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://duqnjvq4jwr55.cloudfront.net/2.1/MathJax.js";
    document.getElementsByTagName("head")[0].appendChild(script);
  }

  window.loadOrRefreshMathJax = function(domId) {
    if (window.MathJax) {
      if (domId) {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub, domId]);
      } else {
        MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
      }
    } else {
      loadMathJax();
    }
  }
})();
</script>
    <script type="text/javascript">
        var site_base_url = "https:\/\/www.coursera.org\/";
        var site_static_asset_url = "https:\/\/dt5zaw6a98blc.cloudfront.net\/site-static\/";
        var spark_class_short_name = "programdesign";
        var spark_class_id = 971286;
        var spark_class_url = "\/programdesign-002";
        var spark_signature_url = "https:\/\/class.coursera.org\/programdesign-002\/signature\/";

        var course_strings_name = "Introduction to Systematic Program Design - Part 1";
        var student_full_name = "Christopher Edward Beattie";
    </script>

    
<script type="text/javascript">$(function() { loadOrRefreshMathJax();})</script>
<script src="./Course-Info_files/textbook_wiki.js"></script>




</body></html>